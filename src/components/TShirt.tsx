/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t scene.gltf --shadows
Author: nottyairs (https://sketchfab.com/nottyairs)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/t-shirt-1ed377fc5d754fe5bef6eb7053c0d5e2
Title: t-shirt
*/

import * as THREE from "three";
import React, { forwardRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useLoader } from "@react-three/fiber";
import { GLTF } from "three-stdlib";
import { useControls } from "leva";
import img from "../assets/images/backpack.png";

type GLTFResult = GLTF & {
  nodes: {
    Mat: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
  };
};

export const TShirt = forwardRef<THREE.Group, JSX.IntrinsicElements["group"]>(
  (props, ref) => {
    const { nodes, materials } = useGLTF(
      "/models/t-shirt/scene-transformed.glb"
    ) as GLTFResult;

    useControls("T-shirt", {
      texture: {
        image: "",
        onChange: (image) => {
          if (image) {
            const texture = new THREE.TextureLoader().load(image);
            materials.material.map = texture;
            console.log(image);
          }
        },
      },
    });

    const hoverHandler = (e: any) => {
      e.stopPropagation();
      (
        document.getElementsByClassName(
          "leva-c-bSezwh"
        ) as HTMLCollectionOf<HTMLDivElement>
      )[0]?.focus();
    };

    return (
      <group {...props} dispose={null} ref={ref} onPointerOver={hoverHandler}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mat.geometry}
          material={materials.material}
        />
      </group>
    );
  }
);
useGLTF.preload("/models/t-shirt/scene-transformed.glb");
